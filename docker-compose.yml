version: '3'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.1
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow-data/config:/opt/airflow/config
    - ./airflow-data/logs:/opt/airflow/logs
    - ./airflow-data/plugins:/opt/airflow/plugins
    - ./airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
    - //var/run/docker.sock:/var/run/docker.sock
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'airflow']
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - airflow db init &&
        airflow users create
          --role Admin
          --username airflow
          --password airflow
          --email airflow@airflow.com
          --firstname airflow
          --lastname airflow
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    command: webserver -p 8081
    ports:
      - 8081:8081
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    container_name: airflow_webserver
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    container_name: airflow_scheduler
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  mysql:
    hostname: mysql
    image: mysql:lts
    ports:
      - 3307:3307
    environment:
      MYSQL_DATABASE: league_default
      MYSQL_USER: league
      MYSQL_PASSWORD: league_default_password
      MYSQL_ROOT_PASSWORD: league_root_password
    expose:
      - 3306
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - trino-network
  mysql-metastore:
    hostname: mysql-metastore
    image: mysql:lts
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: hive
      MYSQL_USER: hive
      MYSQL_PASSWORD: hive_default_password
      MYSQL_ROOT_PASSWORD: hive_root_password
    expose:
      - 3306
    volumes:
      - ./mysql-metastore:/var/lib/mysql
    networks:
      - trino-network

  minio:
    hostname: minio
    image: 'minio/minio:RELEASE.2024-05-10T01-41-38Z'
    container_name: minio_league
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio:/data
    command: server /data --console-address ":9001"
    networks:
      - trino-network

  trino:
    container_name: trino
    image: 'trinodb/trino:448'
    hostname: trino
    ports:
      - 8085:8085
    volumes:
      - ./trino:/etc/trino
    networks:
      - trino-network
        
  hive:
    container_name: hive
    image: 'apache/hive:4.0.0'
    hostname: hive
    environment:
      - METASTORE_DB_HOSTNAME=mysqlmetastore
      - HIVE_CUSTOM_CONF_DIR=/hive_custom_dir
      - HADOOP_CLASSPATH=/opt/hadoop/share/hadoop/tools/lib/aws-java-sdk-bundle-1.12.730.jar:/opt/hadoop/share/hadoop/tools/lib/hadoop-aws-3.3.6.jar
      - HIVE_VERSION=4.0.0
      - SERVICE_NAME=metastore
      - AWS_ACCESS_KEY=5BhQJIs21n5bDDB4M8Di
      - AWS_SECRET_KEY=C0YXxJFUgXm1ZuiAoOvp7i4zZJq1YzFAULWLiVlJ
    ports:
      - 9083:9083
    volumes:
      - ./conf:/hive_custom_dir
      - ./conf/jars/mysql-connector-j-8.4.0.jar:/opt/hive/lib/mysql-connector-j-8.4.0.jar
      - ./conf/jars/aws-java-sdk-bundle-1.12.730.jar:/opt/hive/lib/aws-java-sdk-bundle-1.12.730.jar
      - ./conf/jars/hadoop-aws-3.3.6.jar:/opt/hive/lib/hadoop-aws-3.3.6.jar
    networks:
      - trino-network

networks:
  trino-network:
    driver: bridge
